// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: examples/blog/v1/blog.proto

package blogv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Kind of tag
type TagColor int32

const (
	// When no color is specified
	TagColor_TAG_COLOR_UNSPECIFIED TagColor = 0
	// blue tag
	TagColor_TAG_COLOR_BLUE TagColor = 1
)

// Enum value maps for TagColor.
var (
	TagColor_name = map[int32]string{
		0: "TAG_COLOR_UNSPECIFIED",
		1: "TAG_COLOR_BLUE",
	}
	TagColor_value = map[string]int32{
		"TAG_COLOR_UNSPECIFIED": 0,
		"TAG_COLOR_BLUE":        1,
	}
)

func (x TagColor) Enum() *TagColor {
	p := new(TagColor)
	*p = x
	return p
}

func (x TagColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TagColor) Descriptor() protoreflect.EnumDescriptor {
	return file_examples_blog_v1_blog_proto_enumTypes[0].Descriptor()
}

func (TagColor) Type() protoreflect.EnumType {
	return &file_examples_blog_v1_blog_proto_enumTypes[0]
}

func (x TagColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TagColor.Descriptor instead.
func (TagColor) EnumDescriptor() ([]byte, []int) {
	return file_examples_blog_v1_blog_proto_rawDescGZIP(), []int{0}
}

// VectorImage can be used for blog posts.
type VectorImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// src of the vector image.
	Src string `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
}

func (x *VectorImage) Reset() {
	*x = VectorImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_blog_v1_blog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VectorImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VectorImage) ProtoMessage() {}

func (x *VectorImage) ProtoReflect() protoreflect.Message {
	mi := &file_examples_blog_v1_blog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VectorImage.ProtoReflect.Descriptor instead.
func (*VectorImage) Descriptor() ([]byte, []int) {
	return file_examples_blog_v1_blog_proto_rawDescGZIP(), []int{0}
}

func (x *VectorImage) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

// BitmapImage visualizer.
type BitmapImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// src of the bitmap image.
	Src string `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
}

func (x *BitmapImage) Reset() {
	*x = BitmapImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_blog_v1_blog_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BitmapImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BitmapImage) ProtoMessage() {}

func (x *BitmapImage) ProtoReflect() protoreflect.Message {
	mi := &file_examples_blog_v1_blog_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BitmapImage.ProtoReflect.Descriptor instead.
func (*BitmapImage) Descriptor() ([]byte, []int) {
	return file_examples_blog_v1_blog_proto_rawDescGZIP(), []int{1}
}

func (x *BitmapImage) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

// BlogPost describes the blog post
type BlogPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title of the post
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// author of the blog post
	Author *BlogAuthor `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	// tags fo the flog post
	Tags []*Tag `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	// image for the blog post
	//
	// Types that are assignable to Image:
	//
	//	*BlogPost_Vector
	//	*BlogPost_Bitmap
	Image isBlogPost_Image `protobuf_oneof:"image"`
	// related blog posts
	Related map[string]*BlogPost `protobuf:"bytes,6,rep,name=related,proto3" json:"related,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// metadata
	Metadata *structpb.Struct `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *BlogPost) Reset() {
	*x = BlogPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_blog_v1_blog_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogPost) ProtoMessage() {}

func (x *BlogPost) ProtoReflect() protoreflect.Message {
	mi := &file_examples_blog_v1_blog_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogPost.ProtoReflect.Descriptor instead.
func (*BlogPost) Descriptor() ([]byte, []int) {
	return file_examples_blog_v1_blog_proto_rawDescGZIP(), []int{2}
}

func (x *BlogPost) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BlogPost) GetAuthor() *BlogAuthor {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *BlogPost) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (m *BlogPost) GetImage() isBlogPost_Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (x *BlogPost) GetVector() *VectorImage {
	if x, ok := x.GetImage().(*BlogPost_Vector); ok {
		return x.Vector
	}
	return nil
}

func (x *BlogPost) GetBitmap() *BitmapImage {
	if x, ok := x.GetImage().(*BlogPost_Bitmap); ok {
		return x.Bitmap
	}
	return nil
}

func (x *BlogPost) GetRelated() map[string]*BlogPost {
	if x != nil {
		return x.Related
	}
	return nil
}

func (x *BlogPost) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isBlogPost_Image interface {
	isBlogPost_Image()
}

type BlogPost_Vector struct {
	// vector image
	Vector *VectorImage `protobuf:"bytes,4,opt,name=vector,proto3,oneof"`
}

type BlogPost_Bitmap struct {
	// bitmap image
	Bitmap *BitmapImage `protobuf:"bytes,5,opt,name=bitmap,proto3,oneof"`
}

func (*BlogPost_Vector) isBlogPost_Image() {}

func (*BlogPost_Bitmap) isBlogPost_Image() {}

// Tag for a blog post
type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// slug for the tag
	Slug string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	// human readable label
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	// color of tag
	Color TagColor `protobuf:"varint,3,opt,name=color,proto3,enum=examples.blog.v1.TagColor" json:"color,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_blog_v1_blog_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_examples_blog_v1_blog_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_examples_blog_v1_blog_proto_rawDescGZIP(), []int{3}
}

func (x *Tag) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Tag) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Tag) GetColor() TagColor {
	if x != nil {
		return x.Color
	}
	return TagColor_TAG_COLOR_UNSPECIFIED
}

// Some partial for a blog author
type BlogAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// first name
	FirstName string `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// last name
	LastName string `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// date of birth
	DateOfBirth *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
}

func (x *BlogAuthor) Reset() {
	*x = BlogAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_blog_v1_blog_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogAuthor) ProtoMessage() {}

func (x *BlogAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_examples_blog_v1_blog_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogAuthor.ProtoReflect.Descriptor instead.
func (*BlogAuthor) Descriptor() ([]byte, []int) {
	return file_examples_blog_v1_blog_proto_rawDescGZIP(), []int{4}
}

func (x *BlogAuthor) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *BlogAuthor) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *BlogAuthor) GetDateOfBirth() *timestamppb.Timestamp {
	if x != nil {
		return x.DateOfBirth
	}
	return nil
}

// Message foo
type Foo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Foo) Reset() {
	*x = Foo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_blog_v1_blog_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Foo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Foo) ProtoMessage() {}

func (x *Foo) ProtoReflect() protoreflect.Message {
	mi := &file_examples_blog_v1_blog_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Foo.ProtoReflect.Descriptor instead.
func (*Foo) Descriptor() ([]byte, []int) {
	return file_examples_blog_v1_blog_proto_rawDescGZIP(), []int{5}
}

var File_examples_blog_v1_blog_proto protoreflect.FileDescriptor

var file_examples_blog_v1_blog_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x62, 0x6c, 0x6f, 0x67, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1f,
	0x0a, 0x0b, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63, 0x22,
	0x1f, 0x0a, 0x0b, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63,
	0x22, 0xcc, 0x03, 0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x67, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x62,
	0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e,
	0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x37, 0x0a,
	0x06, 0x62, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x06,
	0x62, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x12, 0x41, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x50,
	0x6f, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x56,
	0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22,
	0x61, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x30, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x22, 0x88, 0x01, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x67, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a,
	0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x22, 0x05, 0x0a,
	0x03, 0x46, 0x6f, 0x6f, 0x2a, 0x39, 0x0a, 0x08, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x19, 0x0a, 0x15, 0x54, 0x41, 0x47, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x54,
	0x41, 0x47, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x01, 0x42,
	0xba, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x42, 0x6c, 0x6f, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x72, 0x65, 0x77, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x61, 0x6d, 0x6f, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x62, 0x6c,
	0x6f, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x6c, 0x6f, 0x67, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x45,
	0x42, 0x58, 0xaa, 0x02, 0x10, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x42, 0x6c,
	0x6f, 0x67, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x10, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x5c, 0x42, 0x6c, 0x6f, 0x67, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1c, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x5c, 0x42, 0x6c, 0x6f, 0x67, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x3a, 0x3a, 0x42, 0x6c, 0x6f, 0x67, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_examples_blog_v1_blog_proto_rawDescOnce sync.Once
	file_examples_blog_v1_blog_proto_rawDescData = file_examples_blog_v1_blog_proto_rawDesc
)

func file_examples_blog_v1_blog_proto_rawDescGZIP() []byte {
	file_examples_blog_v1_blog_proto_rawDescOnce.Do(func() {
		file_examples_blog_v1_blog_proto_rawDescData = protoimpl.X.CompressGZIP(file_examples_blog_v1_blog_proto_rawDescData)
	})
	return file_examples_blog_v1_blog_proto_rawDescData
}

var file_examples_blog_v1_blog_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_examples_blog_v1_blog_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_examples_blog_v1_blog_proto_goTypes = []interface{}{
	(TagColor)(0),                 // 0: examples.blog.v1.TagColor
	(*VectorImage)(nil),           // 1: examples.blog.v1.VectorImage
	(*BitmapImage)(nil),           // 2: examples.blog.v1.BitmapImage
	(*BlogPost)(nil),              // 3: examples.blog.v1.BlogPost
	(*Tag)(nil),                   // 4: examples.blog.v1.Tag
	(*BlogAuthor)(nil),            // 5: examples.blog.v1.BlogAuthor
	(*Foo)(nil),                   // 6: examples.blog.v1.Foo
	nil,                           // 7: examples.blog.v1.BlogPost.RelatedEntry
	(*structpb.Struct)(nil),       // 8: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_examples_blog_v1_blog_proto_depIdxs = []int32{
	5, // 0: examples.blog.v1.BlogPost.author:type_name -> examples.blog.v1.BlogAuthor
	4, // 1: examples.blog.v1.BlogPost.tags:type_name -> examples.blog.v1.Tag
	1, // 2: examples.blog.v1.BlogPost.vector:type_name -> examples.blog.v1.VectorImage
	2, // 3: examples.blog.v1.BlogPost.bitmap:type_name -> examples.blog.v1.BitmapImage
	7, // 4: examples.blog.v1.BlogPost.related:type_name -> examples.blog.v1.BlogPost.RelatedEntry
	8, // 5: examples.blog.v1.BlogPost.metadata:type_name -> google.protobuf.Struct
	0, // 6: examples.blog.v1.Tag.color:type_name -> examples.blog.v1.TagColor
	9, // 7: examples.blog.v1.BlogAuthor.date_of_birth:type_name -> google.protobuf.Timestamp
	3, // 8: examples.blog.v1.BlogPost.RelatedEntry.value:type_name -> examples.blog.v1.BlogPost
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_examples_blog_v1_blog_proto_init() }
func file_examples_blog_v1_blog_proto_init() {
	if File_examples_blog_v1_blog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_examples_blog_v1_blog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VectorImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_blog_v1_blog_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BitmapImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_blog_v1_blog_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_blog_v1_blog_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_blog_v1_blog_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_blog_v1_blog_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Foo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_examples_blog_v1_blog_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*BlogPost_Vector)(nil),
		(*BlogPost_Bitmap)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_examples_blog_v1_blog_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_examples_blog_v1_blog_proto_goTypes,
		DependencyIndexes: file_examples_blog_v1_blog_proto_depIdxs,
		EnumInfos:         file_examples_blog_v1_blog_proto_enumTypes,
		MessageInfos:      file_examples_blog_v1_blog_proto_msgTypes,
	}.Build()
	File_examples_blog_v1_blog_proto = out.File
	file_examples_blog_v1_blog_proto_rawDesc = nil
	file_examples_blog_v1_blog_proto_goTypes = nil
	file_examples_blog_v1_blog_proto_depIdxs = nil
}
